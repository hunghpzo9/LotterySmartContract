/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VRFv2Consumer,
  VRFv2ConsumerInterface,
} from "../../contracts/VRFv2Consumer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "chooseWiner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "data",
    outputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listAdd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "result",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040527f79d3d8832d904592c0bf9818b621522c988bb8b0c05cdc3b15aea1b6e8db0c15600655600780546001600160501b03191666010003000186a01790556000600c819055600d5534801561005757600080fd5b5060405161113538038061113583398101604081905261007691610227565b732ca8e0c643bde4c2e08ab1fa0da3401adad7734d60805233806000816100e45760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b0384811691909117909155811615610114576101148161017e565b5050600380546001600160401b03909316600160a01b026001600160e01b031990931692909217732ca8e0c643bde4c2e08ab1fa0da3401adad7734d1790915550600780546a01000000000000000000003302600160501b600160f01b0319909116179055610257565b336001600160a01b038216036101d65760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016100db565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b60006020828403121561023957600080fd5b81516001600160401b038116811461025057600080fd5b9392505050565b608051610ebc6102796000396000818161036501526103a70152610ebc6000f3fe6080604052600436106100f35760003560e01c8063a168fa891161008a578063e0c8628911610059578063e0c86289146102c6578063f0ba8440146102db578063f2fde38b14610324578063fc2a88c31461034457600080fd5b8063a168fa89146101f2578063d8a4676f14610242578063dbc3abf214610270578063dfbf53ae146102a657600080fd5b80636a55be24116100c65780636a55be241461018a57806379ba50971461019f5780638796ba8c146101b45780638da5cb5b146101d457600080fd5b80631fe543e3146100f8578063481c6a751461011a5780635d0f77e31461015e5780636537214714610166575b600080fd5b34801561010457600080fd5b50610118610113366004610c3b565b61035a565b005b34801561012657600080fd5b5060075461014190600160501b90046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101186103e7565b34801561017257600080fd5b5061017c600a5481565b604051908152602001610155565b34801561019657600080fd5b506101186104cc565b3480156101ab57600080fd5b5061011861058c565b3480156101c057600080fd5b5061017c6101cf366004610d05565b610636565b3480156101e057600080fd5b506000546001600160a01b0316610141565b3480156101fe57600080fd5b5061022b61020d366004610d05565b60026020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610155565b34801561024e57600080fd5b5061026261025d366004610d05565b610657565b604051610155929190610d59565b34801561027c57600080fd5b5061014161028b366004610d05565b6009602052600090815260409020546001600160a01b031681565b3480156102b257600080fd5b50600b54610141906001600160a01b031681565b3480156102d257600080fd5b5061017c61074b565b3480156102e757600080fd5b5061030f6102f6366004610d05565b6008602052600090815260409020805460019091015482565b60408051928352602083019190915201610155565b34801561033057600080fd5b5061011861033f366004610d7c565b610910565b34801561035057600080fd5b5061017c60055481565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d95760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b6103e38282610924565b5050565b600034116103f457600080fd5b600c5460019060009081036104505750600d8054600090815260086020908152604080832085905583548352808320346001909101819055935483526009909152902080546001600160a01b03191633179055600c8190555050565b600c5461045e906001610dbb565b915034600c5461046e9190610dbb565b600d8054919250600061048083610dd4565b9091555050600d805460009081526008602090815260408083208690558354835280832060010185905592548252600990522080546001600160a01b03191633179055600c8190555050565b600754600160501b90046001600160a01b031633146104ea57600080fd5b6000600c5460016104fb9190610dbb565b600a546105089190610e03565b9050600061051a6000600d5484610a0b565b60008181526009602052604080822054600b80546001600160a01b0319166001600160a01b03909216918217905590519293509182914780156108fc02929091818181858888f19350505050158015610577573d6000803e3d6000fd5b50506000600c819055600d819055600a555050565b6001546001600160a01b031633146105df5760405162461bcd60e51b815260206004820152601660248201527526bab9ba10313290383937b837b9b2b21037bbb732b960511b60448201526064016103d0565b60008054336001600160a01b0319808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6004818154811061064657600080fd5b600091825260209091200154905081565b600081815260026020526040812054606090610100900460ff166106b15760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016103d0565b60008381526002602090815260408083208151606081018352815460ff808216151583526101009091041615158185015260018201805484518187028101870186528181529295939486019383018282801561072c57602002820191906000526020600020905b815481526020019060010190808311610718575b5050505050815250509050806000015181604001519250925050915091565b6000610755610ac7565b6003546006546007546040516305d3b1d360e41b81526004810192909252600160a01b830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526001600160a01b0390911690635d3b1d309060a4016020604051808303816000875af11580156107ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108109190610e17565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600283529590932084518154945161ffff1990951690151561ff001916176101009415159490940293909317835593518051959650929491936108859391850192910190610bc5565b5050600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0182905550600581905560075460408051838152660100000000000090920463ffffffff1660208301527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b610918610ac7565b61092181610b1c565b50565b600082815260026020526040902054610100900460ff1661097b5760405162461bcd60e51b81526020600482015260116024820152701c995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064016103d0565b6000828152600260209081526040909120805460ff19166001908117825583516109ac939290910191840190610bc5565b50806000815181106109c0576109c0610e30565b6020026020010151600a819055507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d82826040516109ff929190610e46565b60405180910390a15050565b6000828403610a1b575082610ac0565b60006002610a298587610dbb565b610a339190610e5f565b6000818152600860205260409020549091508310801590610a6557506000818152600860205260409020600101548311155b15610a71579050610ac0565b600081815260086020526040902060010154831115610aa757610a9f610a98826001610dbb565b8585610a0b565b915050610ac0565b610abc85610ab6600184610e73565b85610a0b565b9150505b9392505050565b6000546001600160a01b03163314610b1a5760405162461bcd60e51b815260206004820152601660248201527527b7363c9031b0b63630b1363290313c9037bbb732b960511b60448201526064016103d0565b565b336001600160a01b03821603610b745760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016103d0565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b828054828255906000526020600020908101928215610c00579160200282015b82811115610c00578251825591602001919060010190610be5565b50610c0c929150610c10565b5090565b5b80821115610c0c5760008155600101610c11565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610c4e57600080fd5b8235915060208084013567ffffffffffffffff80821115610c6e57600080fd5b818601915086601f830112610c8257600080fd5b813581811115610c9457610c94610c25565b8060051b604051601f19603f83011681018181108582111715610cb957610cb9610c25565b604052918252848201925083810185019189831115610cd757600080fd5b938501935b82851015610cf557843584529385019392850192610cdc565b8096505050505050509250929050565b600060208284031215610d1757600080fd5b5035919050565b600081518084526020808501945080840160005b83811015610d4e57815187529582019590820190600101610d32565b509495945050505050565b8215158152604060208201526000610d746040830184610d1e565b949350505050565b600060208284031215610d8e57600080fd5b81356001600160a01b0381168114610ac057600080fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610dce57610dce610da5565b92915050565b600060018201610de657610de6610da5565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610e1257610e12610ded565b500690565b600060208284031215610e2957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b828152604060208201526000610d746040830184610d1e565b600082610e6e57610e6e610ded565b500490565b81810381811115610dce57610dce610da556fea26469706673582212206e4e5d1ed6ebf03120e82c499329314c8e11c3d482b10da1cb9e95866c478f4e64736f6c63430008150033";

type VRFv2ConsumerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VRFv2ConsumerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VRFv2Consumer__factory extends ContractFactory {
  constructor(...args: VRFv2ConsumerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(subscriptionId, overrides || {});
  }
  override deploy(
    subscriptionId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(subscriptionId, overrides || {}) as Promise<
      VRFv2Consumer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VRFv2Consumer__factory {
    return super.connect(runner) as VRFv2Consumer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VRFv2ConsumerInterface {
    return new Interface(_abi) as VRFv2ConsumerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VRFv2Consumer {
    return new Contract(address, _abi, runner) as unknown as VRFv2Consumer;
  }
}
